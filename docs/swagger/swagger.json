{
    "swagger": "2.0",
    "info": {
        "title": "Wishlist Swagger API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8001",
    "basePath": "/api/v1",
    "paths": {
        "/history": {
            "get": {
                "description": "getting the history of adding/removing users in a segment for a specific month",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "GetHistoryCSV",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "month",
                        "name": "month",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloaded file"
                    },
                    "400": {
                        "description": "invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/segment/create": {
            "post": {
                "description": "create segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "CreateSegment",
                "parameters": [
                    {
                        "description": "form segment",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormSegment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "segment created",
                        "schema": {
                            "$ref": "#/definitions/models.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "percent is invalid",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "409": {
                        "description": "segment with this slug already exists",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/segment/{slug}": {
            "get": {
                "description": "get segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "GetSegment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get segment info",
                        "schema": {
                            "$ref": "#/definitions/models.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "invalid url",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "segment not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "DeleteSegment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "segment deleted"
                    },
                    "400": {
                        "description": "invalid url",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "segment not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CreateUser",
                "parameters": [
                    {
                        "description": "form user",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "invalid form",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "409": {
                        "description": "user with this nickname already exists",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get user info",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "invalid url",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            },
            "put": {
                "description": "edit user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "EditUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "form user",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user info edited",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "invalid form",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "409": {
                        "description": "user with this nickname already exists",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "DeleteUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted"
                    },
                    "400": {
                        "description": "invalid url",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/user/{id}/segments": {
            "get": {
                "description": "get user's segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "GetUserSegments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get user's segments",
                        "schema": {
                            "$ref": "#/definitions/models.SegmentsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid url",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        },
        "/user/{id}/segments/edit": {
            "put": {
                "description": "edit user's segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segment"
                ],
                "summary": "EditUserSegments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "form segment",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FormEditSegments"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success edit user's segments",
                        "schema": {
                            "$ref": "#/definitions/models.SegmentsResponse"
                        }
                    },
                    "400": {
                        "description": "field until is invalid. format: YYYY-MM-DD HH:MM",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "404": {
                        "description": "segment not found",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.JSONError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AddUserToSegment": {
            "type": "object",
            "properties": {
                "segmentSlug": {
                    "type": "string"
                },
                "until": {
                    "type": "string"
                }
            }
        },
        "models.FormEditSegments": {
            "type": "object",
            "properties": {
                "segmentsToAdd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AddUserToSegment"
                    }
                },
                "segmentsToRemove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.FormSegment": {
            "type": "object",
            "required": [
                "slug"
            ],
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.FormUser": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "username"
            ],
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Segment": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "integer"
                },
                "segmentID": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.SegmentResponse": {
            "type": "object",
            "properties": {
                "segment": {
                    "$ref": "#/definitions/models.Segment"
                }
            }
        },
        "models.SegmentsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Segment"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        }
    }
}